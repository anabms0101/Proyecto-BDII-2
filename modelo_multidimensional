create schema Datamart;

create table Datamart.Sucursal (
	id_sucursal int primary key not null unique,
	gerente int not null);

create table Datamart.Pelicula(
	id_pelicula int primary key not null unique,
	titulo text not null
);

create table Datamart.lugar (
	id_lugar int primary key not null DEFAULT nextval('store_store_id_seq'::regclass),
	direccion text not null,
	ciudad text not null,
	pais text not null
);

create table Datamart.fecha (
	Fecha date primary key not null unique,
	dia int not null CHECK (dia >= 1 AND dia <= 31),
	mes int not null CHECK (mes >= 1 AND mes <= 12),
	anio int not null
);


CREATE OR REPLACE PROCEDURE InsertDateToDatamart()
LANGUAGE plpgsql
AS $$
DECLARE
    fecha_val DATE;
BEGIN
    FOR fecha_val IN SELECT DISTINCT rental_date FROM rental LOOP
        BEGIN
            INSERT INTO DATAMART.fecha (fecha, dia, mes, anio)
            VALUES (
                fecha_val,
                EXTRACT(DAY FROM fecha_val),
                EXTRACT(MONTH FROM fecha_val),
                EXTRACT(YEAR FROM fecha_val)
            )
            ON CONFLICT (fecha) DO NOTHING;
        END;
    END LOOP;
END;
$$;

call InsertDateToDatamart();




CREATE OR REPLACE PROCEDURE InsertMovieToDatamart()
LANGUAGE plpgsql
AS $$
BEGIN
insert into  DATAMART.pelicula (id_pelicula, titulo)
	select film_id, title from film
	on conflict do nothing;
END;
$$;

call InsertMovieToDatamart();


CREATE OR REPLACE PROCEDURE InsertPlaceToDatamart()
LANGUAGE plpgsql
AS $$
BEGIN
insert into  DATAMART.lugar (direccion, ciudad, pais)
	select a.address, c.city, o.country 
	from address a
	left join city c on a.city_id = c.city_id
	left join country o on o.country_id = c.country_id
	on conflict do nothing;
END;
$$;

call InsertPlaceToDatamart();


CREATE OR REPLACE PROCEDURE InsertStoreToDatamart()
LANGUAGE plpgsql
AS $$
BEGIN
insert into  DATAMART.sucursal (id_sucursal, gerente)
	select store_id, manager_staff_id from store
	on conflict do nothing;
END;
$$;

call InsertStoreToDatamart();
